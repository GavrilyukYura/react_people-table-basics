{"version":3,"sources":["components/HomePage.tsx","api/api.ts","components/Loader/Loader.tsx","components/PeopleRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPeople","a","fetch","result","json","Loader","className","PeopleRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","slug","PeoplePage","useState","setPeolpe","isLoading","setLoading","useEffect","loadingPeole","peopleFromServer","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"sPAAaA,EAAW,kBACtB,4C,qCCDWC,EAAS,uCAAG,4BAAAC,EAAA,sEAEvBC,MAAM,qEAFiB,cACjBC,EADiB,yBAIhBA,EAAOC,QAJS,2CAAH,qDCGTC,G,MAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCDNC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,+BACE,oBAAIF,UAAU,eAAd,SAA8BE,EAAOC,OACrC,oBAAIH,UAAU,eAAd,SAA8BE,EAAOE,MACrC,oBAAIJ,UAAU,eAAd,SAA8BE,EAAOG,OACrC,oBAAIL,UAAU,eAAd,SAA8BE,EAAOI,OACrC,oBAAIN,UAAU,eAAd,SAA8BE,EAAOK,aACrC,oBAAIP,UAAU,eAAd,SAA8BE,EAAOM,iBCL5BC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,wBAAOV,UAAU,2CAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGU,EAAOC,KAAI,SAAAT,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOU,eChBlCC,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,qBAAU,WACR,IAAMC,EAAY,uCAAG,4BAAAxB,EAAA,sEACYD,IADZ,OACb0B,EADa,OAGnBL,EAAUK,GACVH,GAAW,GAJQ,2CAAH,qDAOlBE,MACC,IAGD,qCACE,6CACCH,EACC,cAAC,EAAD,CAAaN,OAAQA,IAErB,cAAC,EAAD,QCSOW,EAvBH,WACV,OACE,sBAAKrB,UAAU,MAAf,UACE,iCACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAMA,UAAU,cAAcsB,GAAG,IAAjC,uBACA,cAAC,IAAD,CAAMtB,UAAU,cAAcsB,GAAG,UAAjC,6BAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,wDCvBnBE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6f385aee.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1>Home page</h1>\n);\n","export const getPeople = async (): Promise<Person[]> => {\n  const result = await\n  fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n  return result.json();\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","type Props = {\n  person: Person;\n};\n\nexport const PeopleRow: React.FC<Props> = ({ person }) => (\n  <tr>\n    <td className=\"is-vcentered\">{person.name}</td>\n    <td className=\"is-vcentered\">{person.sex}</td>\n    <td className=\"is-vcentered\">{person.born}</td>\n    <td className=\"is-vcentered\">{person.died}</td>\n    <td className=\"is-vcentered\">{person.motherName}</td>\n    <td className=\"is-vcentered\">{person.fatherName}</td>\n  </tr>\n);\n","import { PeopleRow } from './PeopleRow';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table className=\"table is-narrow is-fullwidth PeopleTable\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PeopleRow person={person} key={person.slug} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api/api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeolpe] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const loadingPeole = async () => {\n      const peopleFromServer = await getPeople();\n\n      setPeolpe(peopleFromServer);\n      setLoading(true);\n    };\n\n    loadingPeole();\n  }, []);\n\n  return (\n    <>\n      <h1>People Page</h1>\n      {isLoading ? (\n        <PeopleTable people={people} />\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport {\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"navbar\">\n          <Link className=\"navbar-item\" to=\"/\">Home page</Link>\n          <Link className=\"navbar-item\" to=\"/people\">Peope page</Link>\n        </nav>\n      </header>\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />} />\n        <Route\n          path=\"*\"\n          element={<p>Page not found</p>}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}